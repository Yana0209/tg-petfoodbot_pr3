import telebot
from telebot import types
import sqlite3

BOT_TOKEN = '7759602453:AAFeBxtc0VRTBzTjplpcbg7Dm-oAvkZuqws'
bot = telebot.TeleBot(BOT_TOKEN)

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∫–æ—à–∏–∫—ñ–≤: {telegram_id: [—Å–ø–∏—Å–æ–∫ product_id]}
cart = {}

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–≤'—è–∑–∫—É product_id –∑ –Ω–∞–∑–≤–∞–º–∏ —Ç–æ–≤–∞—Ä—ñ–≤
PRODUCT_NAMES = {
    'add_rc_cat1': 'Royal Canin Sterilised (–ö–æ—Ç)',
    'add_rc_cat2': 'Royal Canin Gastro Intestinal (–ö–æ—Ç)',
    'add_rc_cat3': 'Royal Canin British Shorthair Adult (–ö–æ—Ç)',
    'add_pp_cat1': 'Purina Pro Plan Sterilised (–ö–æ—Ç)',
    'add_pp_cat2': 'Purina Pro Plan Adult 1+ Derma Care (–ö–æ—Ç)',
    'add_pp_cat3': 'Purina Pro Plan Delicate Lamb (–ö–æ—Ç)',
    'add_o_cat1': 'Optimeal - —ñ–Ω–¥–∏—á–∫–∞ —Ç–∞ –æ–≤–µ—Å (–ö–æ—Ç)',
    'add_o_cat2': 'Optimeal Adult Cat Sterilised (–ö–æ—Ç)',
    'add_o_cat3': 'Optimeal - —è–ª–æ–≤–∏—á–∏–Ω–∞ —Ç–∞ —Å–æ—Ä–≥–æ (–ö–æ—Ç)',
    'add_rc_dog1': 'Royal Canin Gastro Intestinal (–°–æ–±–∞–∫–∞)',
    'add_rc_dog2': 'Royal Canin Maxi Adult (–°–æ–±–∞–∫–∞)',
    'add_rc_dog3': 'Royal Canin Medium Adult (–°–æ–±–∞–∫–∞)',
    'add_pp_dog1': 'Purina Pro Plan Puppy Small & Mini (–°–æ–±–∞–∫–∞)',
    'add_pp_dog2': 'Purina Pro Plan Adult Medium (–°–æ–±–∞–∫–∞)',
    'add_pp_dog3': 'Purina Pro Plan Medium Sensitive Skin (–°–æ–±–∞–∫–∞)',
    'add_o_dog1': 'Optimeal –¥–ª—è –¥–æ—Ä–æ—Å–ª–∏—Ö —Å–æ–±–∞–∫ –≤–µ–ª–∏–∫–∏—Ö –ø–æ—Ä—ñ–¥ (–°–æ–±–∞–∫–∞)',
    'add_o_dog2': 'Optimeal –¥–ª—è —Ü—É—Ü–µ–Ω—è—Ç –≤—Å—ñ—Ö –ø–æ—Ä—ñ–¥ (–°–æ–±–∞–∫–∞)',
    'add_o_dog3': 'Optimeal –≥—ñ–ø–æ–∞–ª–µ—Ä–≥–µ–Ω–Ω–∏–π (–°–æ–±–∞–∫–∞)',
    
}

def create_connection():
    conn = sqlite3.connect('pet_food_bot.db', check_same_thread=False)
    cursor = conn.cursor()
    return conn, cursor

def close_connection(conn, cursor):
    cursor.close()
    conn.close()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –π–æ–≥–æ ID
def add_user(telegram_id):
    conn, cursor = create_connection()
    user_id = None
    try:
        cursor.execute("INSERT OR IGNORE INTO users (telegram_id) VALUES (?)", (telegram_id,))
        conn.commit()
        cursor.execute("SELECT id FROM users WHERE telegram_id = ?", (telegram_id,))
        result = cursor.fetchone()
        if result:
            user_id = result[0]
    finally:
        close_connection(conn, cursor)
    return user_id

# /start
@bot.message_handler(commands=['start'])
def start(message):
    add_user(message.from_user.id)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_cats = types.KeyboardButton('–ö–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ üêà')
    btn_dogs = types.KeyboardButton('–ö–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ üêï')
    btn_cart = types.KeyboardButton('–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫')
    btn_order = types.KeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
    markup.add(btn_cats, btn_dogs)
    markup.add(btn_cart, btn_order)
    bot.send_message(message.chat.id, f"–í—ñ—Ç–∞—é, {message.from_user.first_name}! üëã\n–Ø –±–æ—Ç –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–º—É –¥–ª—è –≤–∞—à–∏—Ö —É–ª—é–±–ª–µ–Ω—Ü—ñ–≤.\n–û–±–µ—Ä—ñ—Ç—å, –¥–ª—è —è–∫–æ—ó —Ç–≤–∞—Ä–∏–Ω–∫–∏ —à—É–∫–∞—î—Ç–µ –∫–æ—Ä–º:", reply_markup=markup)

# –∫–∞—Ç–µ–≥–æ—Ä—ñ—è –ö–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤
@bot.message_handler(func=lambda message: message.text == '–ö–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ üêà')
def show_cat_brands(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_royal_canin_cats = types.KeyboardButton('Royal Canin (Cats)')
    btn_purina_cats = types.KeyboardButton('Purina Pro Plan (Cats)')
    btn_optiMeal_cats = types.KeyboardButton("OptiMeal (Cats)")
    btn_back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    markup.add(btn_royal_canin_cats, btn_purina_cats, btn_optiMeal_cats)
    markup.add(btn_back)
    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –±—Ä–µ–Ω–¥:", reply_markup=markup)

# Royal Canin (–¥–ª—è –∫–æ—Ç—ñ–≤)
@bot.message_handler(func=lambda message: message.text == 'Royal Canin (Cats)')
def show_royal_canin_cats(message):
    markup_rc_cat1 = types.InlineKeyboardMarkup()
    btn_add_rc_cat1 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_rc_cat1')
    markup_rc_cat1.add(btn_add_rc_cat1)
    bot.send_message(message.chat.id, "<b>Royal Canin (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/3/700x700l80mc0/sukhiy-korm-dlya-kotiv-royal-canin-sterilised-37-400-g-82438080816065.webp'> –°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ Royal Canin Sterilised </a> üêæ\n",
                                    parse_mode='html', reply_markup=markup_rc_cat1)

    markup_rc_cat2 = types.InlineKeyboardMarkup()
    btn_add_rc_cat2 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_rc_cat2')
    markup_rc_cat2.add(btn_add_rc_cat2)
    bot.send_message(message.chat.id, "<b>Royal Canin (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/25/700x700l80mc0/sukhoy-korm-dlya-koshek-pri-zabolevaniyakh-zheludochno-kishechnogo-trakta-royal-canin-gastro-intestinal-2-kg-domashnyaya-ptitsa-51737914164841.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ Royal Canin Gastro Intestinal</a> üêæ\n",
                                        parse_mode='html', reply_markup=markup_rc_cat2)

    markup_rc_cat3 = types.InlineKeyboardMarkup()
    btn_add_rc_cat3 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_rc_cat3')
    markup_rc_cat3.add(btn_add_rc_cat3)
    bot.send_message(message.chat.id, "<b>Royal Canin (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/46/700x700l80mc0/sukhiy-korm-dlya-kotiv-royal-canin-british-shorthair-adult-400-g-domashnya-ptitsya-12473590661405.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ –ø–æ—Ä–æ–¥–∏ –±—Ä–∏—Ç–∞–Ω—Å—å–∫–∞ –∫–æ—Ä–æ—Ç–∫–æ—à–µ—Ä—Å—Ç–∞ Royal Canin British Shorthair Adult</a> üêæ\n",
                                       parse_mode='html', reply_markup=markup_rc_cat3)

# Purina Pro Plan (–¥–ª—è –∫–æ—Ç—ñ–≤)
@bot.message_handler(func=lambda message: message.text == 'Purina Pro Plan (Cats)')
def show_purina_cats(message):
    markup_pp_cat1 = types.InlineKeyboardMarkup()
    btn_add_pp_cat1 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_pp_cat1')
    markup_pp_cat1.add(btn_add_pp_cat1)
    bot.send_message(message.chat.id, "<b>Purina Pro Plan (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/16/700x700l80mc0/sukhoy-korm-dlya-pozhilykh-sterilizovannykh-koshek-pro-plan-sterilised-7-15-kg-indeyka-26858866681636.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ Pro Plan Sterilised</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_pp_cat1)

    markup_pp_cat2 = types.InlineKeyboardMarkup()
    btn_add_pp_cat2 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_pp_cat2')
    markup_pp_cat2.add(btn_add_pp_cat2)
    bot.send_message(message.chat.id, "<b>Purina Pro Plan (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/17/700x700l80mc0/sukhiy-korm-dlya-kotiv-sherst-yakikh-vimagaie-dodatkovogo-doglyadu-pro-plan-elegant-adult-salmon-400-g-losos-78256025396486.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ Pro Plan Adult 1+ Derma Care</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_pp_cat2)

    markup_pp_cat3 = types.InlineKeyboardMarkup()
    btn_add_pp_cat3 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_pp_cat3')
    markup_pp_cat3.add(btn_add_pp_cat3)
    bot.send_message(message.chat.id, "<b>Purina Pro Plan (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/21/700x700l80mc0/sukhoy-korm-dlya-koshek-s-chuvstvitelnym-pishchevareniem-pro-plan-delicate-15-kg-yagnenok-80842266147037.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ –∑ —á—É—Ç–ª–∏–≤–∏–º —Ç—Ä–∞–≤–ª–µ–Ω–Ω—è–º Pro Plan Delicate Lamb</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_pp_cat3)

# OptiMeal (–¥–ª—è –∫–æ—Ç—ñ–≤)
@bot.message_handler(func=lambda message: message.text == "OptiMeal (Cats)")
def show_optimeal_cats(message):
    markup_o_cat1 = types.InlineKeyboardMarkup()
    btn_add_o_cat1 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_o_cat1')
    markup_o_cat1.add(btn_add_o_cat1)
    bot.send_message(message.chat.id, "<b>OptiMeal (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/12/700x700l80mc0/suxoy-korm-dlja-sterilizovannyx-koshek-i-kastrirovannyx-kotov-optimeal-4-kg-indeyka-i-oves-99089663354128.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è —Å—Ç–µ—Ä–∏–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –∫–æ—Ç—ñ–≤ Optimeal - —ñ–Ω–¥–∏—á–∫–∞ —Ç–∞ –æ–≤–µ—Å</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_o_cat1)

    markup_o_cat2 = types.InlineKeyboardMarkup()
    btn_add_o_cat2 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_o_cat2')
    markup_o_cat2.add(btn_add_o_cat2)
    bot.send_message(message.chat.id, "<b>OptiMeal (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/29/700x700l80mc0/sukhiy-korm-dlya-kotiv-optimeal-adult-cat-sterilised-10-kg-losos-66662956320268.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ Optimeal Adult Cat Sterilised</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_o_cat2)

    markup_o_cat3 = types.InlineKeyboardMarkup()
    btn_add_o_cat3 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_o_cat3')
    markup_o_cat3.add(btn_add_o_cat3)
    bot.send_message(message.chat.id, "<b>OptiMeal (–î–ª—è –∫–æ—Ç—ñ–≤)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/28/700x700l80mc0/sukhiy-korm-dlya-sterilizovanikh-kishok-optimeal-4-kg-yalovichina-ta-sorgo-49290621672250.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è —Å—Ç–µ—Ä–∏–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –∫—ñ—à–æ–∫ Optimeal</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_o_cat3)

# –∫–∞—Ç–µ–≥–æ—Ä—ñ—è –ö–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫
@bot.message_handler(func=lambda message: message.text == '–ö–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ üêï')
def show_dog_brands(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_royal_canin_dogs = types.KeyboardButton('Royal Canin (Dogs)')
    btn_purina_dogs = types.KeyboardButton('Purina Pro Plan (Dogs)')
    btn_optimeal_dogs = types.KeyboardButton('OptiMeal (Dogs)')
    btn_back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    markup.add(btn_royal_canin_dogs, btn_purina_dogs, btn_optimeal_dogs)
    markup.add(btn_back)
    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –±—Ä–µ–Ω–¥:", reply_markup=markup)

# Royal Canin (–¥–ª—è —Å–æ–±–∞–∫)
@bot.message_handler(func=lambda message: message.text == 'Royal Canin (Dogs)')
def show_royal_canin_dogs(message):
    markup_rc_dog1 = types.InlineKeyboardMarkup()
    btn_add_rc_dog1 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_rc_dog1')
    markup_rc_dog1.add(btn_add_rc_dog1)
    bot.send_message(message.chat.id, "<b>Royal Canin (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/35/700x700l80mc0/sukhoy-korm-dlya-sobak-pri-zabolevaniyakh-zheludochno-kishechnogo-trakta-royal-canin-gastro-intestinal-2-kg-domashnyaya-ptitsa-28809777287282.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ Royal Canin Gastro Intestinal</a> üêæ\n",
                                    parse_mode='html', reply_markup=markup_rc_dog1)

    markup_rc_dog2 = types.InlineKeyboardMarkup()
    btn_add_rc_dog2 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_rc_dog2')
    markup_rc_dog2.add(btn_add_rc_dog2)
    bot.send_message(message.chat.id, "<b>Royal Canin (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/5/700x700l80mc0/sukhiy-korm-dlya-sobak-royal-canin-maxi-adult-4-kg-domashnya-ptitsya-75694807835381.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ Royal Canin Maxi Adult</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_rc_dog2)

    markup_rc_dog3 = types.InlineKeyboardMarkup()
    btn_add_rc_dog3 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_rc_dog3')
    markup_rc_dog3.add(btn_add_rc_dog3)
    bot.send_message(message.chat.id, "<b>Royal Canin (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/6/700x700l80mc0/suxoy-korm-dlja-sobak-royal-canin-medium-adult-4-kg--domashnjaja-ptica-44350272952965.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ Royal Canin Medium Adult</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_rc_dog3)

# Purina Pro Plan (–¥–ª—è —Å–æ–±–∞–∫)
@bot.message_handler(func=lambda message: message.text == 'Purina Pro Plan (Dogs)')
def show_purina_dogs(message):
    markup_pp_dog1 = types.InlineKeyboardMarkup()
    btn_add_pp_dog1 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_pp_dog1')
    markup_pp_dog1.add(btn_add_pp_dog1)
    bot.send_message(message.chat.id, "<b>Purina Pro Plan (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/20/700x700l80mc0/suxoy-korm-dlja-shenkov-malyx-porod-pro-plan-small-and-mini-puppy-7-kg-kurica-76286800680992.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è —Ü—É—Ü–µ–Ω—è—Ç —Ç–∞ –º–æ–ª–æ–¥–∏—Ö —Å–æ–±–∞–∫ Pro Plan Puppy Small & Mini</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_pp_dog1)

    markup_pp_dog2 = types.InlineKeyboardMarkup()
    btn_add_pp_dog2 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_pp_dog2')
    markup_pp_dog2.add(btn_add_pp_dog2)
    bot.send_message(message.chat.id, "<b>Purina Pro Plan (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/7/700x700l80mc0/suxoy-korm-dlja-vzroslyx-sobak-srednix-porod-pro-plan-adult-medium-3-kg-kurica-41260792839959.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ Pro Plan Adult Medium</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_pp_dog2)

    markup_pp_dog3 = types.InlineKeyboardMarkup()
    btn_add_pp_dog3 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_pp_dog3')
    markup_pp_dog3.add(btn_add_pp_dog3)
    bot.send_message(message.chat.id, "<b>Purina Pro Plan (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/44/700x700l80mc0/sukhiy-korm-dlya-doroslikh-sobak-serednikh-porid-proplan-medium-sensitive-skin-14-kg-losos-36895003515746.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ ProPlan Medium Sensitive Skin</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_pp_dog3)

# OptiMeal (–¥–ª—è —Å–æ–±–∞–∫)
@bot.message_handler(func=lambda message: message.text == 'OptiMeal (Dogs)')
def show_optimeal_dogs(message):
    markup_o_dog1 = types.InlineKeyboardMarkup()
    btn_add_o_dog1 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_o_dog1')
    markup_o_dog1.add(btn_add_o_dog1)
    bot.send_message(message.chat.id, "<b>OptiMeal (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/35/700x700l80mc0/sukhiy-korm-dlya-doroslikh-sobak-velikikh-porid-optimeal-15-kg-indichka-97878546311428.webp'>–°—É—Ö–∏–π –∫–æ—Ä–º –¥–ª—è –¥–æ—Ä–æ—Å–ª–∏—Ö —Å–æ–±–∞–∫ –≤–µ–ª–∏–∫–∏—Ö –ø–æ—Ä—ñ–¥ Optimeal</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_o_dog1)

    markup_o_dog2 = types.InlineKeyboardMarkup()
    btn_add_o_dog2 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_o_dog2')
    markup_o_dog2.add(btn_add_o_dog2)
    bot.send_message(message.chat.id, "<b>OptiMeal (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/38/700x700l80mc0/suxoy-polnoracionnyy-korm-dlja-shenkov-vsex-porod-optimeal-15-kg-indeyka-92115270126012.webp'>–°—É—Ö–∏–π –ø–æ–≤–Ω–æ—Ä–∞—Ü—ñ–æ–Ω–Ω–∏–π –∫–æ—Ä–º –¥–ª—è —Ü—É—Ü–µ–Ω—è—Ç –≤—Å—ñ—Ö –ø–æ—Ä—ñ–¥ Optimeal </a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_o_dog2)

    markup_o_dog3 = types.InlineKeyboardMarkup()
    btn_add_o_dog3 = types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data='add_o_dog3')
    markup_o_dog3.add(btn_add_o_dog3)
    bot.send_message(message.chat.id, "<b>OptiMeal (–î–ª—è —Å–æ–±–∞–∫)</b>\n\n"
                                      "<a href='https://masterzoo.ua/content/images/36/700x700l80mc0/sukhiy-gipoalergenniy-korm-optimeal-dlya-doroslikh-sobak-serednikh-ta-velikikh-porid-4-kg-losos-30916144363031.webp'>–°—É—Ö–∏–π –≥—ñ–ø–æ–∞–ª–µ—Ä–≥–µ–Ω–Ω–∏–π –∫–æ—Ä–º Optimeal –¥–ª—è –¥–æ—Ä–æ—Å–ª–∏—Ö —Å–æ–±–∞–∫ —Å–µ—Ä–µ–¥–Ω—ñ—Ö —Ç–∞ –≤–µ–ª–∏–∫–∏—Ö –ø–æ—Ä—ñ–¥</a> üêæ\n",
                                      parse_mode='html', reply_markup=markup_o_dog3)

# –ù–∞–∑–∞–¥
@bot.message_handler(func=lambda message: message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
def back_to_main(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_cats = types.KeyboardButton('–ö–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤ üêà')
    btn_dogs = types.KeyboardButton('–ö–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ üêï')
    btn_cart = types.KeyboardButton('–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫')
    btn_order = types.KeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
    markup.add(btn_cats, btn_dogs)
    markup.add(btn_cart, btn_order)
    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=markup)

# –ü–µ—Ä–µ–≥–ª—è–¥ –∫–æ—à–∏–∫–∞
@bot.message_handler(func=lambda message: message.text == '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫')
def show_cart(message):
    user_id = message.from_user.id
    if user_id in cart and cart[user_id]:
        cart_items = cart[user_id]
        cart_text = "<b>–í–∞—à –∫–æ—à–∏–∫:</b>\n"
        item_counts = {}
        for item_id in cart_items:
            item_counts[item_id] = item_counts.get(item_id, 0) + 1

        for item_id, quantity in item_counts.items():
            product_name = PRODUCT_NAMES.get(item_id, "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–æ–≤–∞—Ä")
            cart_text += f"- {product_name} (–ö—ñ–ª—å–∫—ñ—Å—Ç—å: {quantity})\n"

        bot.send_message(message.chat.id, cart_text, parse_mode='html')
    else:
        bot.send_message(message.chat.id, "–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.")

# –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
@bot.message_handler(func=lambda message: message.text == '–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
def process_order(message):
    user_id = message.from_user.id
    if user_id in cart and cart[user_id]:
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∑–≤'—è–∑–∫—É:")
        bot.register_next_step_handler(message, get_phone_number)
    else:
        bot.send_message(message.chat.id, "–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π. –ù–µ–º–æ–∂–ª–∏–≤–æ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.")

def get_phone_number(message):
    phone_number = message.text
    user_id = message.from_user.id
    cart_items = cart.get(user_id, [])
    order_details = "\n".join([PRODUCT_NAMES.get(item_id, "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–æ–≤–∞—Ä") for item_id in cart_items])

    bot.send_message(message.chat.id,
                     f"–î—è–∫—É—î–º–æ! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {phone_number}.\n–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n{order_details}\n\n–Ø–∫—â–æ —É –≤–∞—Å —î —è–∫—ñ—Å—å –ø–æ–±–∞–∂–∞–Ω–Ω—è –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –≤–≤–µ–¥—ñ—Ç—å —ó—Ö –∑–∞—Ä–∞–∑, –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'.",
                     reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add(
                         types.KeyboardButton('–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')))
    bot.register_next_step_handler(message, confirm_order, phone_number, cart_items)

def confirm_order(message, phone_number, cart_items):
    if message.text == '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è':
        cart.clear()
        ordered_items = "\n".join([PRODUCT_NAMES.get(item_id, "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–æ–≤–∞—Ä") for item_id in cart_items])
        bot.send_message(message.chat.id,
                         f"–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ. –ú–∏ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É—î–º–æ –≤–∞–º –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {phone_number}.\n–ó–∞–º–æ–≤–ª–µ–Ω—ñ —Ç–æ–≤–∞—Ä–∏:\n{ordered_items}",
                         reply_markup=types.ReplyKeyboardRemove())
    else:
        cart.clear()
        ordered_items = "\n".join([PRODUCT_NAMES.get(item_id, "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–æ–≤–∞—Ä") for item_id in cart_items])
        bot.send_message(message.chat.id,
                         f"–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {message.text}.\n–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ. –ú–∏ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É—î–º–æ –≤–∞–º –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {phone_number}.\n–ó–∞–º–æ–≤–ª–µ–Ω—ñ —Ç–æ–≤–∞—Ä–∏:\n{ordered_items}",
                         reply_markup=types.ReplyKeyboardRemove())

# –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith('add_'))
def add_to_cart(call):
    user_id = call.from_user.id
    product_id = call.data

    if user_id not in cart:
        cart[user_id] = []

    cart[user_id].append(product_id)

    product_name = PRODUCT_NAMES.get(product_id, "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–æ–≤–∞—Ä")
    bot.answer_callback_query(call.id, f"–¢–æ–≤–∞—Ä '{product_name}' –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!")
    bot.send_message(call.message.chat.id, f"–¢–æ–≤–∞—Ä '{product_name}' –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞.\n–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫'.")

if __name__ == '__main__':
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
    conn, cursor = create_connection()
    cursor.execute('''
                CREATE TABLE IF NOT EXISTS users (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    telegram_id INTEGER UNIQUE
                )
            ''')
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∫–æ—à–∏–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS cart (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            product_id TEXT, -- –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 'rc_cat1')
            quantity INTEGER DEFAULT 1,
            FOREIGN KEY (user_id) REFERENCES users(id)
        )
    ''')
    conn.commit()
    close_connection(conn, cursor)

    bot.polling(none_stop=True)